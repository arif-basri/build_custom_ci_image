# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: debian
# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # https://devcenter.wercker.com/development/steps/
  steps:
    #docker image environment-ready for magento app, include app source
    - internal/docker-build:
        dockerfile: Dockerfile
        image-name: magento3
        # env-file: env
        
    - internal/docker-run:
        image: magento3
        name: magento3_web_1
        ports: 80:80
        env: 
            "MYSQL_HOST=db",
            "MYSQL_ROOT_PASSWORD=myrootpassword",
            "MYSQL_USER=magento",
            "MYSQL_PASSWORD=magento",
            "MYSQL_DATABASE=magento",
            
            "MAGENTO_LANGUAGE=en_GB",
            "MAGENTO_TIMEZONE=Pacific/Auckland",
            "MAGENTO_DEFAULT_CURRENCY=NZD",
            "MAGENTO_URL=http://local.magento",
            "MAGENTO_BACKEND_FRONTNAME=admin",
            "MAGENTO_USE_SECURE=0",
            "MAGENTO_BASE_URL_SECURE=0",
            "MAGENTO_USE_SECURE_ADMIN=0",
            
            "MAGENTO_ADMIN_FIRSTNAME=Admin",
            "MAGENTO_ADMIN_LASTNAME=MyStore",
            "MAGENTO_ADMIN_EMAIL=amdin@example.com",
            "MAGENTO_ADMIN_USERNAME=admin",
            "MAGENTO_ADMIN_PASSWORD=magentorocks1"
        
    # install the magento source 
    - internal/shell:
        cmd: /bin/sh
        code: |
          install-magento
        
    - internal/docker-push:
        # specify the image to be pushed - this is the one we created earlier
        image-name: magento3
        username: firadaboss # Registry username  
        password: fira2212 # Registry password
        registry: https://registry.hub.docker.com/v2
        repository: firadaboss/magento3
test:
  #use docker image created in the previous pipeline
#  box:
#    id: firadaboss/magento3
#    username: firadaboss
#    password: fira2212
#    tag: latest   
#    # Steps make up the actions in your pipeline
#    # Read more about steps on our dev center:
#    # https://devcenter.wercker.com/development/steps/
#  steps:
#    # A custom script step, name value is used in the UI
#    # and the code value contains the command that get executed
#    - script:
#        name: run test
#        code: 
#        
#        name: echo nodejs information
#        code: |
#          echo "node version $(node -v) running"
#          echo "npm version $(npm -v) running"
#          
#    - internal/docker-build:
#        dockerfile: Dockerfile
#        image-name: magento3
#        
#    - internal/docker-push:
#        # specify the image to be pushed - this is the one we created earlier
#        image-name: magento3
#        username: firadaboss # Registry username  
#        password: fira2212 # Registry password
#        registry: https://registry.hub.docker.com/v2
#        repository: firadaboss/magento3        
deploy:
#    # Steps make up the actions in your pipeline
#    # Read more about steps on our dev center:
#    # https://devcenter.wercker.com/development/steps/
#  steps:
#    # A custom script step, name value is used in the UI
#    # and the code value contains the command that get executed
#    - script:
#        name: echo nodejs information
#        code: |
#          echo "node version $(node -v) running"
#          echo "npm version $(npm -v) running"
#          
#    - internal/docker-build:
#        dockerfile: Dockerfile
#        image-name: magento3
#        
#    - internal/docker-push:
#        # specify the image to be pushed - this is the one we created earlier
#        image-name: magento3
#        username: firadaboss # Registry username  
#        password: fira2212 # Registry password
#        registry: https://registry.hub.docker.com/v2
#        repository: firadaboss/magento3                